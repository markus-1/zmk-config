/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <locale/keys_de.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    macros {
        tilde_slash: tilde_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp DE_SLASH>;
            label = "TILDE_SLASH";
        };
    };

    behaviors {
        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_mod_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <22 23 8 9 10 7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45>;
            hold-trigger-on-release;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_mod_right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            display-name = "Colemak";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&kt LS(LA(LC(LEFT_GUI)))  &kp Q             &kp W                 &kp F             &kp P               &kp B  &none  &none  &kp J        &kp L                &kp U              &kp Y                  &kp P              &kp BSPC
&kp ESC                   &hrml LEFT_ALT A  &hrml LEFT_CONTROL R  &hrml LEFT_GUI S  &hrml LEFT_SHIFT T  &kp G  &none  &none  &kp M        &hrmr RIGHT_SHIFT N  &hrmr RIGHT_GUI E  &hrmr RIGHT_CONTROL I  &hrmr RIGHT_ALT O  &none
&kp LSHFT                 &lt 3 Z           &kp X                 &kp C             &kp D               &kp V                &kp K        &kp H                &kp COMMA          &kp DOT                &lt 3 FSLH         &none
                                                                  &mo 4             &lt 1 TAB           &mo 5                &lt 5 ENTER  &lt 1 SPACE          &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        Nav {
            display-name = "Nav";

            // ---------------------------------------------------------------------
            // |           | + | @ | # | $ | | | =   | "    | '    | `   | % | DEL |
            // | CAPS_WORD | < | [ | { | ( | \ | LFT | DWN  |  UP  | RGT |   |     |
            // |           | > | ] | } | ) | * | !   | PGDN | PGUP | ?   | / |     |
            // |           |   |   |   |   |   |     | ALT  |      |     |   |     |

            bindings = <
&kp TAB     &kp DE_PLUS           &kp LA(L)                  &kp DE_HASH             &kp DE_DOLLAR             &kp LA(N7)       &trans  &trans  &kp DE_EQUAL  &kp DE_DOUBLE_QUOTES  &kp DE_SINGLE_QUOTE  &kp DE_GRAVE     &kp DE_PERCENT  &kp DEL
&caps_word  &hrml LEFT_ALT GRAVE  &hrml LEFT_GUI DE_LBKT &hrml LEFT_CONTROL LA(N5)   &hrml LEFT_SHIFT DE_LPAR  &kp LS(LA(N7))   &trans  &trans  &kp LEFT      &kp DOWN              &kp UP               &kp RIGHT        &tilde_slash    &trans
&trans      &kp TILDE             &kp DE_RBKT            &kp LA(NUMBER_6)            &kp DE_RPAR               &kp DE_ASTERISK                  &kp DE_EXCL   &kp PG_DN             &kp PG_UP            &kp DE_QUESTION  &kp DE_SLASH    &trans
                                                             &trans                  &trans                    &trans                           &trans        &trans                &trans
            >;
        };

        Num {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT | RALT  |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |               |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&trans     &trans        &trans     &trans     &trans  &trans     &trans  &trans  &trans       &trans  &trans  &trans  &trans      &trans
&trans     &kp NUMBER_1  &kp N2     &kp N3     &kp N4  &none      &trans  &trans  &kp N6       &kp N7  &kp N8  &kp N9  &none       &kp C_VOLUME_UP
&kp LSHFT  &trans        &kp LG(X)  &kp LG(C)  &kp N5  &kp LG(V)                  &kp DE_EXCL  &kp N0  &trans  &trans  &kp C_MUTE  &kp C_VOLUME_DOWN
                                    &trans     &trans  &trans                     &trans       &trans  &trans
            >;
        };

        German {
            display-name = "German";
            bindings = <
&trans  &trans           &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans  &kp DE_U_UMLAUT  &trans  &trans           &trans
&trans  &kp DE_A_UMLAUT  &trans  &kp DE_ESZETT  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans  &kp DE_O_UMLAUT  &trans
&trans  &trans           &trans  &trans         &trans  &trans                  &trans  &trans  &trans           &trans  &trans           &trans
                                 &trans         &trans  &trans                  &trans  &trans  &trans
            >;
        };

        MA {
            display-name = "MA";
            bindings = <
&kp TAB  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &trans  &trans  &rgb_ug RGB_TOG  &trans  &trans  &trans  &trans        &trans
&trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &rgb_ug RGB_BRI  &trans  &trans  &trans  &tilde_slash  &trans
&trans   &bt BT_CLR    &trans        &sys_reset    &bootloader   &studio_unlock                  &rgb_ug RGB_BRD  &trans  &trans  &trans  &trans        &trans
                                     &trans        &trans        &trans                          &trans           &trans  &trans
            >;
        };

        Num2 {
            display-name = "Num 2";
            bindings = <
&trans     &trans  &trans        &trans        &trans        &trans     &trans  &trans  &trans       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &to 0       &trans
&trans     &none   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none      &trans  &trans  &none        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none       &kp C_VOLUME_UP
&kp LSHFT  &trans  &kp LG(X)     &kp LG(C)     &none         &kp LG(V)                  &kp DE_EXCL  &kp N0        &trans        &trans        &kp C_MUTE  &kp C_VOLUME_DOWN
                                 &trans        &trans        &trans                     &trans       &trans        &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };
};
