/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    macros {
        caret_space: caret_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_CARET &kp SPACE>;
        };

        grave_space: grave_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_GRAVE &kp SPACE>;
        };

        tilde_slash: tilde_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;

            // The following key codes do not work, tested on macros with ansi and iso layout:
            // DE_TILDE

            bindings = <&kp LA(N) &kp DE_SLASH>;
            label = "TILDE_SLASH";
        };
    };

    behaviors {
        hrml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <22 23 8 9 10 7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45>;
            hold-trigger-on-release;
        };

        hrmlsh: home_row_mod_left_shift {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <22 23 8 9 10 7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45>;
            hold-trigger-on-release;
        };

        hrmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_mod_right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
        };

        hrmrsh: home_row_mod_right_shift {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
        };

        ltger: layer_tap_german {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <15 9 26 17>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <3 4>;
        };

        Ansi {
            bindings = <&tog 5>;
            key-positions = <28 39>;
            layers = <0>;
        };

        Base {
            bindings = <&to 0>;
            key-positions = <39 28>;
            layers = <5>;
        };

        Caps-Word {
            bindings = <&caps_word>;
            key-positions = <19 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            display-name = "Colemak";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  ^   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&sk LS(LA(LC(LEFT_GUI)))  &kp Q             &kp W                 &kp F             &kp P                 &kp B  &none  &none  &kp J        &kp L                  &kp U              &kp Y                  &mo 4              &kp BSPC
&kp ESC                   &hrml LEFT_ALT A  &hrml LEFT_CONTROL R  &hrml LEFT_GUI S  &hrmlsh LEFT_SHIFT T  &kp G  &none  &none  &kp M        &hrmrsh RIGHT_SHIFT N  &hrmr RIGHT_GUI E  &hrmr RIGHT_CONTROL I  &hrmr RIGHT_ALT O  &caret_space
&kp LSHFT                 &ltger 3 Z        &kp X                 &kp C             &kp D                 &kp V                &kp K        &kp H                  &kp COMMA          &kp DOT                &ltger 3 FSLH      &trans
                                                                  &none             &lt 1 TAB             &mo 2                &lt 2 ENTER  &lt 1 SPACE            &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        Symbols {
            display-name = "Symbols";

            // ----------------------------------------------------------------------
            // |           | % | @ | # | $ | | | =   | "    | '    | `   | +  | DEL |
            // | CAPS_WORD | < | { | [ | ( | \ | LFT | DWN  |  UP  | RGT | ~/ |     |
            // |           | > | } | ] | ) | * | !   | PGDN | PGUP | ?   | /  |     |
            // |           |   |   |   |   |   |     | ALT  |      |     |    |     |
            //
            // + on the right in order to support CMD + (increase size)
            // The following key codes do not work, tested on macros with ansi and iso layout:
            // DE_AT
            // DE_LBRC / DE_RBRC
            // DE_PIPE
            // DE_BACKSLASH

            bindings = <
&trans      &kp DE_PERCENT        &kp LA(L)               &kp DE_HASH            &kp DE_DOLLAR               &kp LA(N7)       &trans  &trans  &kp DE_EQUAL  &kp DE_DOUBLE_QUOTES  &kp DE_SINGLE_QUOTE  &grave_space     &kp DE_PLUS   &kp DEL
&caps_word  &hrml LEFT_ALT DE_LT  &hrml LEFT_ALT DE_LBKT  &hrml LEFT_GUI LA(N5)  &hrmlsh LEFT_SHIFT DE_LPAR  &kp LS(LA(N7))   &trans  &trans  &kp LEFT      &kp DOWN              &kp UP               &kp RIGHT        &tilde_slash  &trans
&trans      &kp DE_GT             &kp DE_RBKT             &kp LA(NUMBER_6)       &kp DE_RPAR                 &kp DE_ASTERISK                  &kp DE_EXCL   &kp PG_DN             &kp PG_UP            &kp DE_QUESTION  &kp DE_SLASH  &trans
                                                          &trans                 &trans                      &trans                           &trans        &trans                &trans
            >;
        };

        Num {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     | LCTRL | RCTRL |     |  4  |  5  |  6  |  +  |  BSPC |
            // |      |     |  7  |  8  |  9  |     | LCTRL | RCTRL |     |  1  |  2  |  3  |     |       |
            // |      |     |     |     |     |     | LCTRL | RCTRL |     |  0  | (,) | (.) | (-) |       |
            //                    |     |     |     |               |     |     |     |

            bindings = <
&trans  &trans        &trans          &trans             &trans               &trans     &trans  &trans  &trans       &kp NUMBER_4                &kp N5              &kp NUMBER_6            &kp DE_PLUS    &kp C_MUTE
&trans  &kp LEFT_ALT  &hrml LCTRL N7  &hrml LEFT_GUI N8  &hrml LEFT_SHIFT N9  &none      &trans  &trans  &none        &hrmr RIGHT_SHIFT NUMBER_1  &hrmr RIGHT_GUI N2  &hrmr RIGHT_CONTROL N3  &kp RIGHT_ALT  &kp C_VOLUME_UP
&trans  &trans        &kp LG(X)       &kp LG(C)          &none                &kp LG(V)                  &kp DE_EXCL  &kp N0                      &trans              &trans                  &trans         &kp C_VOLUME_DOWN
                                      &trans             &trans               &trans                     &trans       &trans                      &trans
            >;
        };

        German {
            display-name = "German";
            bindings = <
&trans  &trans           &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans  &kp DE_U_UMLAUT  &trans  &trans           &trans
&trans  &kp DE_A_UMLAUT  &trans  &kp DE_ESZETT  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans  &kp DE_O_UMLAUT  &trans
&trans  &trans           &trans  &trans         &trans  &trans                  &trans  &trans  &trans           &trans  &trans           &trans
                                 &trans         &trans  &trans                  &trans  &trans  &trans
            >;
        };

        Function {
            display-name = "Function";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4       &kp F5          &trans  &trans  &rgb_ug RGB_TOG  &trans  &trans      &trans  &trans      &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9       &kp F10         &trans  &trans  &rgb_ug RGB_BRI  &trans  &bt BT_NXT  &trans  &bt BT_CLR  &trans
&trans  &kp F11  &kp F12  &trans  &bootloader  &studio_unlock                  &rgb_ug RGB_BRD  &trans  &bt BT_PRV  &trans  &sys_reset  &trans
                          &trans  &trans       &trans                          &trans           &trans  &trans
            >;
        };

        ANSI {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans   &kp SEMICOLON  &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans         &kp BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &kp COMMA  &kp DOT  &kp MINUS      &kp SLASH
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;

            label = "ANSI";
        };
    };
};
